I am currently reading a book from the gSchool reading list called
Pragmatic Thinking and Learning: Refactor your Wetware (Pragmatic
Programmers). The author, Andy Hunt, dives into how our brains are
wired, and how to apply ourselves in learning new skills. It is written
with programming in mind, but uses examples and analogies that span
other professional and artistic disciplines. Andy claims:

"In this book you'll learn how to:
- Use the Dreyfus Model of Skill Acquisition to become more expert
- Leverage the architecture of the brain to strengthen different thinking
- modes
- Avoid common "known bugs" in your mind
- Learn more deliberately and more effectively
- Manage knowledge more efficiently"

Yes please. Sign me up.  

I am only on chapter 3, but actually feeling like there might be hope
for me yet. He talks at length about the Dreyfus model of Skill
Acquistion in the first three chapters. I won't go into detail on the
model, but it's worth investigating further if you are so inclined. I
will, however, provide you with Katrina's succinct and apt summation of the scale:
  
- Novice: where you know nothing
- Advanced beginner: where you still suck, but you start seeing what
this might be about
- Competent: where you can start getting shit done
- Proficient: where you get shit done really well
- Expert: where the shit you get done seems like magic to pretty much
everyone else.

I am a novice. And according to Andy, those who are of the novice
persuasion require a specific kind of teaching love. Here are a couple
high-level themes from the book that spoke to me personally:
First: Crawl, Walk, Run 
In that order. Focus on small conceptual chunks that we can repeat over
and over with iterative, and again, small variations. This is the idea
of building a foundation of fundamentals, which if we take our time
here, accumulating small, but frequent wins, we develop confidence and
skill to scale upward in application, dare I say, rapidly. And this
requires time and focus, because the baby steps have got to come first. 
Second: 
